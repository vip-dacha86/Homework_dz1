<!-- // docker run --rm -v ${pwd}/php-cli/:/cli php:8.2-cli php /cli/homework1.php -->

<!-- // docker run --rm -v ${pwd}/php-cli/:/cli php:7.4-cli php /cli/homework1.php -->

<?php -->


    $a = 5;
    $b = '05';
    var_dump($a == $b);
    var_dump((int)'012345');
    var_dump((float)123.0 === (int)123.0);
    var_dump(0 == 'hello, world');

    /* 8.2
    bool(true) преобразование к int, '05' становится 5
    int(12345) парсинг к int
    bool(false) false так, как плавающая точка отсекается
    bool(false)

    При сравнении значения типа "number" с нечисловой строкой, PHP пытается
    выполнить более строгое сравнение, учитывая значение и тип данных.
    В результате непосредственного сравнения между числом 0 и строкой 'hello, world',
    значения типов не совпадают (int и string соответственно),
    поэтому в PHP 8.2 сравнение 0 == 'hello, world' будет давать значение false.
    */

    /* 7.4
    bool(true)
    int(12345)
    bool(false)
    bool(true)

    В PHP 7.4 и более ранних версиях, при сравнении значения 0 с нечисловой строкой,
    PHP автоматически преобразовывает строку в число, игнорируя нецифровые символы.
    В данном случае, 'hello, world' будет преобразовано к числовому значению 0.
    Поэтому сравнение 0 == 'hello, world' в PHP 7.4 будет давать значение true.
    */

    $a = 1;
    $b = 2;
    $a ^= $b;
    $b = $a ^ $b;
    $a ^= $b;

    // через ^
    echo "\nПеременная а = {$a}, переменная b = {$b}";

